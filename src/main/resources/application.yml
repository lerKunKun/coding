server:
  port: 8080

spring:
  application:
    name: biou-project
  profiles:
    active: dev
  
  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/biou_db?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
      username: root
      password: 123456
      # 初始连接数
      initial-size: 5
      # 最小连接池数量
      min-idle: 5
      # 最大连接池数量
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      # 配置检测连接是否有效
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 1
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters
      filters: stat,wall
      # 连接属性
      connect-properties:
        druid.stat.mergeSql: true
        druid.stat.slowSqlMillis: 5000
      # 保持连接活跃
      keep-alive: true
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keep-alive-between-time-millis: 120000
      # 连接初始化时执行的sql
      connection-init-sqls: SET NAMES utf8mb4
      # 异步关闭连接
      async-close-connection-enable: true
      # 物理超时时间，重要
      phy-timeout-millis: 60000
      # 是否失败快速切换
      fail-fast: true
      # 连接出错后重试次数
      connection-error-retry-attempts: 1
      # 断开后是否物理关闭
      break-after-acquire-failure: true

  # Redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间（毫秒）
    timeout: 1000
    # Lettuce连接池配置
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 20
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0

# MyBatis Plus配置
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.biou.project.entity
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      # 字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: NOT_NULL
      # 驼峰下划线转换
      column-underline: true
      # 数据库大写下划线转换
      #capital-mode: true
      # 逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
    banner: false

# 日志配置
logging:
  level:
    com.biou.mapper: debug
    com.biou.project.mapper: debug
    druid.sql.Statement: debug
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

# JWT配置
jwt:
  # JWT密钥
  secret: biou-project-jwt-secret-key-2024
  # 访问token过期时间（秒），默认24小时
  expiration: 86400
  # 刷新token过期时间（秒），默认7天
  refresh-expiration: 604800

# 钉钉配置
dingtalk:
  # 钉钉应用ID
  app-id: ${DINGTALK_APP_ID:your_dingtalk_app_id}
  # 钉钉应用密钥
  app-secret: ${DINGTALK_APP_SECRET:your_dingtalk_app_secret}
  # 钉钉登录回调地址
  redirect-uri: ${DINGTALK_REDIRECT_URI:http://localhost:8080/api/auth/dingtalk/callback}

# 系统日志配置
biou:
  log:
    # 日志保留天数，默认90天
    retention-days: 90
    # 自动清理配置
    auto-cleanup:
      # 是否启用自动清理，默认启用
      enabled: true
      # 清理任务执行时间，默认每天凌晨2点
      cron: "0 0 2 * * ?"
    # 统计任务配置
    statistics:
      # 统计任务执行时间，默认每小时执行一次
      cron: "0 0 * * * ?" 